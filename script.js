// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
let menuData = {};

async function loadData() {
    try {
        const responses = await Promise.all([
            fetch('data/fillings.json'),
            fetch('data/sizes.json'),
            fetch('data/examples.json'),
            fetch('data/reviews.json')
        ]);
        
        const [fillings, sizes, examples, reviews] = await Promise.all(
            responses.map(r => r.json())
        );
        
        menuData = { fillings, sizes, examples, reviews };
        showSection('fillings'); // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ä–∞–∑–¥–µ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        document.getElementById('content').innerHTML = '<div class="section active">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>';
    }
}

function showSection(sectionName) {
    // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã
    document.querySelectorAll('.section').forEach(section => {
        section.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª
    let content = '';
    
    switch(sectionName) {
        case 'fillings':
            content = renderFillings();
            break;
        case 'sizes':
            content = renderSizes();
            break;
        case 'prices':
            content = renderPrices();
            break;
        case 'examples':
            content = renderExamples();
            break;
        case 'reviews':
            content = renderReviews();
            break;
        case 'contact':
            content = renderContact();
            break;
    }
    
    document.getElementById('content').innerHTML = content;
}

function renderFillings() {
    if (!menuData.fillings) return '<div class="section active">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    let html = '<div class="section active"><h2>üéÇ –ù–∞—á–∏–Ω–∫–∏ –¥–ª—è —Ç–æ—Ä—Ç–æ–≤</h2>';
    
    menuData.fillings.forEach(filling => {
        html += `
            <div class="filling-item">
                <h3>${filling.name}</h3>
                <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${filling.description}</p>
                <p><strong>–¶–µ–Ω–∞:</strong> ${filling.price} —Ä—É–±/–∫–≥</p>
            </div>
        `;
    });
    
    html += '</div>';
    return html;
}

function renderSizes() {
    if (!menuData.sizes) return '<div class="section active">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    let html = '<div class="section active"><h2>üìè –†–∞–∑–º–µ—Ä—ã —Ç–æ—Ä—Ç–æ–≤</h2>';
    
    menuData.sizes.forEach(size => {
        html += `
            <div class="size-item">
                <h3>${size.name}</h3>
                <p><strong>–î–∏–∞–º–µ—Ç—Ä:</strong> ${size.diameter}</p>
                <p><strong>–ü–æ—Ä—Ü–∏–∏:</strong> ${size.portions}</p>
                <p><strong>–ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω—ã:</strong> ${size.multiplier}x</p>
            </div>
        `;
    });
    
    html += '</div>';
    return html;
}

function renderPrices() {
    if (!menuData.fillings || !menuData.sizes) return '<div class="section active">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    let html = '<div class="section active"><h2>üí∞ –†–∞—Å—Ü–µ–Ω–∫–∏ –Ω–∞ —Ç–æ—Ä—Ç—ã</h2>';
    
    menuData.sizes.forEach(size => {
        html += `<h3>${size.name} (${size.portions} –ø–æ—Ä—Ü–∏–π)</h3>`;
        html += '<table class="price-table">';
        html += '<tr><th>–ù–∞—á–∏–Ω–∫–∞</th><th>–°—Ç–æ–∏–º–æ—Å—Ç—å</th></tr>';
        
        menuData.fillings.forEach(filling => {
            const price = parseInt(filling.price) * parseFloat(size.multiplier);
            html += `<tr><td>${filling.name}</td><td>${price} —Ä—É–±</td></tr>`;
        });
        
        html += '</table><br>';
    });
    
    html += '</div>';
    return html;
}

function renderExamples() {
    if (!menuData.examples) return '<div class="section active">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    let html = '<div class="section active"><h2>üì∏ –ü—Ä–∏–º–µ—Ä—ã –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç</h2><div class="gallery">';
    
    menuData.examples.forEach(example => {
        html += `
            <div class="gallery-item">
                <img src="${example.photo}" alt="${example.description}" onerror="this.src='https://via.placeholder.com/200x150/ff6b6b/white?text=–¢–æ—Ä—Ç'">
                <p>${example.description}</p>
            </div>
        `;
    });
    
    html += '</div></div>';
    return html;
}

function renderReviews() {
    if (!menuData.reviews) return '<div class="section active">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    
    let html = '<div class="section active"><h2>‚≠ê –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>';
    
    menuData.reviews.forEach(review => {
        const stars = '‚≠ê'.repeat(review.rating);
        html += `
            <div class="review">
                <h3>${review.name} ${stars}</h3>
                <p>${review.text}</p>
                <small>${review.date}</small>
            </div>
        `;
    });
    
    html += '</div>';
    return html;
}

function renderContact() {
    return `
        <div class="section active">
            <h2>üí¨ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏</h2>
            <div class="contact-info">
                <p><strong>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 XXX XXX-XX-XX</p>
                <p><strong>‚úâÔ∏è Telegram:</strong> <a href="https://t.me/valery_cake_lab" target="_blank">@valery_cake_lab</a></p>
                <p><strong>üìß Email:</strong> valery@cakelab.ru</p>
                <p><strong>üè† –ê–¥—Ä–µ—Å:</strong> –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ö–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–∞—è, 15</p>
                
                <h3>‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</h3>
                <p>–ü–Ω-–ü—Ç: 9:00-20:00<br>–°–±-–í—Å: 10:00-18:00</p>
                
                <h3>üöö –î–æ—Å—Ç–∞–≤–∫–∞:</h3>
                <p>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 2000 —Ä—É–±</p>
            </div>
        </div>
    `;
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
loadData();
